#include <stdio.h>

typedef unsigned long long uint64_t;
typedef unsigned int uint32_t;
uint32_t circularLeftShift(uint32_t value, int shift) {
    return ((value << shift) | (value >> (28 - shift))) & 0xFFFFFFF;
}
void generateSubkeys(uint64_t initialKey, uint64_t *subkeys) {
    uint32_t left28, right28;
    left28 = (uint32_t)((initialKey >> 28) & 0xFFFFFFF);
    right28 = (uint32_t)(initialKey & 0xFFFFFFF);

    int shiftValues[16] = {1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1};

    for (int round = 0; round < 16; round++) {
        left28 = circularLeftShift(left28, shiftValues[round]);
        right28 = circularLeftShift(right28, shiftValues[round]);

        subkeys[round] = ((uint64_t)left28 << 28) | right28;
    }
}

int main() {
    uint64_t initialKey = 0x0123456789ABCDEF; 
    uint64_t subkeys[16];

    generateSubkeys(initialKey, subkeys);

    printf("Generated Subkeys:\n");
    for (int i = 0; i < 16; i++) {
        printf("Subkey %d: %016llX\n", i + 1, subkeys[i]);
    }

    return 0;
}
